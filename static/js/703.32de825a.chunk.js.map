{"version":3,"file":"static/js/703.32de825a.chunk.js","mappings":"mOACA,GAAgB,SAAW,yBAAyB,MAAQ,sBAAsB,UAAY,0BAA0B,WAAa,2BAA2B,UAAY,2B,SCuD5K,EAnDe,WACX,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAASF,EAAaG,IAAI,UAApD,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAmCH,EAAAA,EAAAA,UAAS,IAA5C,eAAOI,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAYXC,EAAc,WAChBC,MAAM,6GAAD,OAC6FP,IAC7FQ,MAAK,SAAAC,GACF,OAAIA,EAASC,GAAcD,EAASE,OAC7BC,QAAQC,OAAO,IAAIC,MAAM,qCACnC,IACAN,MAAK,SAACO,GACHZ,EAAcY,EAAKC,QACtB,GACR,EAED,GAAKd,EAIL,OAAQ,iCACJ,kBAAMe,UAAYC,EAAAA,UAAlB,WACI,kBAAOC,KAAK,OAAOC,YAAY,0BAA0BH,UAAYC,EAAAA,MACjEG,SA7BU,SAACC,GACnBrB,EAASqB,EAAEC,OAAOC,MAAMC,OAAOC,cAClC,KA4BO,mBAAQT,UAAYC,EAAAA,SAAeC,KAAK,SAASQ,QA1BpC,SAACL,GAClBA,EAAEM,iBACF/B,EAAgB,CAAEG,MAAOA,IACzBM,GACH,EAsBO,UACI,SAAC,MAAD,CAAUW,UAAYC,EAAAA,mBAG9B,eAAID,UAAYC,EAAAA,UAAhB,SACKhB,EAAU2B,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACrB,OAAO,yBACH,UAAC,KAAD,CAAMC,MAAO,CAAEC,KAAM7B,GAAYa,UAAYC,EAAAA,UAAgBgB,GAAE,WAAMH,GAArE,UAA4ED,EAA5E,QADYC,EAGnB,QAIZ,C","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputBtn\":\"Movies_inputBtn__c16TS\",\"input\":\"Movies_input__OE3ef\",\"inputWrap\":\"Movies_inputWrap__GJZmZ\",\"searchIcon\":\"Movies_searchIcon__7+8KY\",\"MovieItem\":\"Movies_MovieItem__vewvu\"};","import { useState } from 'react';\nimport { FiSearch } from 'react-icons/fi';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport css from \"./Movies.module.css\"\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [query, setQuery] = useState(searchParams.get(\"query\"));\n    const [moviesArr, setmMoviesArr] = useState([]);\n    const location = useLocation();\n\n    const onInputChange = (e) => {\n        setQuery(e.target.value.trim().toLowerCase())\n    }\n\n    const HandleSubmit = (e) => {\n        e.preventDefault();\n        setSearchParams({ query: query })\n        fetchMovies();\n    }\n\n    const fetchMovies = () => {\n        fetch(`\nhttps://api.themoviedb.org/3/search/movie?api_key=c3f95f745a9082077133badef3071055&language=en-US&query=${query}`)\n            .then(response => {\n                if (response.ok) { return (response.json()) }\n                return Promise.reject(new Error('Please provide valid search value'))\n            })\n            .then((data) => {\n                setmMoviesArr(data.results)\n            })\n    }\n\n    if (!moviesArr) {\n        return\n    }\n\n    return (<>\n        <form className={(css.inputWrap)}>\n            <input type=\"text\" placeholder=\"Please write movie name\" className={(css.input)}\n                onChange={onInputChange} />\n            <button className={(css.inputBtn)} type=\"submit\" onClick={HandleSubmit}>\n                <FiSearch className={(css.searchIcon)} />\n            </button>\n        </form>\n        <ul className={(css.MovieList)}>\n            {moviesArr.map(({ title, id }) => {\n                return <li key={id}>\n                    <Link state={{ from: location }} className={(css.MovieItem)} to={`/${id}`}>{title} </Link >\n                </li>\n            })}\n        </ul>\n    </>\n    );\n}\n\nexport default Movies"],"names":["useSearchParams","searchParams","setSearchParams","useState","get","query","setQuery","moviesArr","setmMoviesArr","location","useLocation","fetchMovies","fetch","then","response","ok","json","Promise","reject","Error","data","results","className","css","type","placeholder","onChange","e","target","value","trim","toLowerCase","onClick","preventDefault","map","title","id","state","from","to"],"sourceRoot":""}