{"version":3,"file":"static/js/900.1442a2a3.chunk.js","mappings":"0NACA,EAA6B,yBAA7B,EAAiE,uB,kBCyCjE,EApCa,WACT,IACQA,GADOC,EAAAA,EAAAA,MACPD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,IAXAC,EAAAA,EAAAA,YAAU,WACNC,MAAM,sCAAD,OAAuCN,EAAvC,oFACAO,MAAK,SAAAC,GACF,OAAIA,EAASC,GAAcD,EAASE,OAC7BC,QAAQC,OAAO,IAAIC,MAAM,qCACnC,IACAN,MAAK,SAACO,GACHV,EAAQU,EAAKX,KAChB,GACR,GAAE,CAACH,IAECG,EAIL,OACI,gBAAKY,UAAYC,EAAjB,SACKb,EAAKc,KAAI,SAACd,GAAD,OAAU,0BAChB,gBAAIY,UAAYC,EAAhB,UACKb,EAAKe,cAAe,gBAAKC,IAAG,6CAAwChB,EAAKe,cAAgBE,MAAM,QAAQC,IAAI,mBACtG,gBAAKF,IAAKG,EAAUF,MAAM,QAAQC,IAAI,mBAC5C,uBAAIlB,EAAKoB,QACT,uCAAepB,EAAKqB,kBALEC,EAAAA,EAAAA,MAApB,KAUrB,C,qBChCD,SAASC,EAAuBC,GAAK,OAAOA,GAAkB,kBAANA,GAAkB,YAAaA,EAAIA,EAAI,CAAE,QAAWA,EAAM,CAElH,IAAIC,EAA8BF,EAJtBG,EAAQ,MAMhBC,EAAe,KACfC,EAAS,EACb,SAASN,EAAOO,GAEd,OADAD,IACO,GAAGE,OAAOD,GAAeF,GAAcG,OAAOF,EACtD,CACD,IAOIG,EAAS,SAAgBC,EAAOC,GAGlC,IAFA,IAAIC,EAAM,GAEDC,EAAI,EAAGA,EAAIH,EAAOG,IACzBD,EAAIE,KAAKd,EAAOW,IAGlB,OAAOC,CACR,EAED,SAASG,EAAYC,GACnB,IAAIC,EAAMd,EAAc,QAAYe,SAIpC,OAHAf,EAAc,QAAYvB,WAAU,WAClCqC,EAAIE,QAAUH,CACf,IACMC,EAAIE,OACZ,CAgBDC,EAAAA,GAAqBpB,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","../node_modules/react-id-generator/lib/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castElWrap\":\"Cast_castElWrap__pit3Y\",\"castWrap\":\"Cast_castWrap__C23u0\"};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport nextId from \"react-id-generator\";\nimport css from \"./Cast.module.css\"\nimport NotFound from '../Photos/NotFound.jpg'\n\nconst Cast = () => {\n    const params = useParams();\n    const { movieId } = params;\n    const [cast, setCast] = useState(null);\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=c3f95f745a9082077133badef3071055&language=en-US&language=en-US`)\n            .then(response => {\n                if (response.ok) { return (response.json()) }\n                return Promise.reject(new Error('Please provide valid search value'))\n            })\n            .then((data) => {\n                setCast(data.cast);\n            })\n    }, [movieId])\n\n    if (!cast) {\n        return\n    }\n\n    return (\n        <div className={(css.castWrap)}>\n            {cast.map((cast) => <div key={nextId()}>\n                <li className={(css.castElWrap)}>\n                    {cast.profile_path ? <img src={`https://image.tmdb.org/t/p/original${cast.profile_path}`} width=\"150px\" alt=\"Not available\"></img>\n                        : <img src={NotFound} width=\"150px\" alt=\"Not available\"></img>}\n                    <p>{cast.name}</p>\n                    <p>Character: {cast.character}</p>\n                </li>\n            </div>)}\n        </div>\n    )\n}\n\n\n\nexport default Cast","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar globalPrefix = \"id\";\nvar lastId = 0;\nfunction nextId(localPrefix) {\n  lastId++;\n  return \"\".concat(localPrefix || globalPrefix).concat(lastId);\n}\nvar resetId = function resetId() {\n  lastId = 0;\n};\nvar setPrefix = function setPrefix(newPrefix) {\n  globalPrefix = newPrefix;\n};\n\nvar getIds = function getIds(count, prefix) {\n  var ids = [];\n\n  for (var i = 0; i < count; i++) {\n    ids.push(nextId(prefix));\n  }\n\n  return ids;\n};\n\nfunction usePrevious(value) {\n  var ref = React__default['default'].useRef();\n  React__default['default'].useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nfunction useId() {\n  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var prefix = arguments.length > 1 ? arguments[1] : undefined;\n  var idsListRef = React__default['default'].useRef([]);\n  var prevCount = usePrevious(count);\n  var prevPrefix = usePrevious(prefix);\n\n  if (count !== prevCount || prevPrefix !== prefix) {\n    idsListRef.current = getIds(count, prefix);\n  }\n\n  return idsListRef.current;\n}\n\nexports['default'] = nextId;\nexports.resetId = resetId;\nexports.setPrefix = setPrefix;\nexports.useId = useId;\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetch","then","response","ok","json","Promise","reject","Error","data","className","css","map","profile_path","src","width","alt","NotFound","name","character","nextId","_interopDefaultLegacy","e","React__default","require","globalPrefix","lastId","localPrefix","concat","getIds","count","prefix","ids","i","push","usePrevious","value","ref","useRef","current","exports"],"sourceRoot":""}